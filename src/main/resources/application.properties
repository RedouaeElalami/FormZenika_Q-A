spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
## create and drop tables and sequences, loads import-dev.sql
#spring.jpa.hibernate.ddl-auto=create
#
#
#
## Oracle settings
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#spring.datasource.username=SYSTEM
#spring.datasource.password=0321456987Rr
#spring.datasource.driver.class=oracle.jdbc.driver.OracleDriver
# logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
logging.level.org.hibernate.SQL=all
server.port=8081
spring.thymeleaf.cache=false
debug=true
logging.file=/var/tmp/mylog.log
#spring.security.user.name=root
#spring.security.user.password=123
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/redouane
spring.datasource.username=root
spring.datasource.password=0321456987Rr
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
logging.level.org.zalando.logbook: TRACE


# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner \
                            join role r on(ur.role_id=r.role_id) where u.email=?

# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always


## = Keep the connection alive if idle for a long time (needed in production)
## ==============================================================
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1


